//You are given a sorted array of distinct integers from 0 to 99, for instance [0, 1, 2, 50, 52, 75].
//Your task is to produce a string that describes numbers missing from the list; in this case "3-49,51,53-74,76-99".
//The items should be sorted in ascending order and separated by commas.
//When a gap spans only one number, the item is the number itself; when a gap is longer, the item comprises the start and the end of the gap, joined with a minus sign.
//Please implement your solution in C


#include<stdio.h>
#include<stdlib.h>
#include<string.h>



void missing_numbers(int * str, int n, int* result, char* res)
{
	int i;int k =0;

	for(i=0; i< (n-1); i++)
	{
		if(str[i +1] - str[i] > 1)
		{
			result[k] = str[i] + 1;
			result[k+1] = str[i+1] - 1;
			k= k+2;
		}
	}
		if(str[5] < 99)
		{
			result[k] = str[i] + 1;
			result[k+1] = 99;
		}


}

int main()
{
	int str[] = {0,1,2,50,52,75};
	int n= sizeof(str)/sizeof(str[0]);
	int final_res[100];
	int * final_result = final_res;
	char fin_res[100];
	char* res = fin_res;
	missing_numbers(str, n,final_result, res);
	int i;
	for(i=0; i<8; i++)
	{
		sprintf(res," %d", final_result[i]);
	}



}
